version: '3.7'

services:
  lb:
    image: traefik:1.7
    hostname: lb-rhea
    command: >-
      --configfile=/dev/null --loglevel=INFO
      --api --api.dashboard=true
      --docker --docker.swarmmode --docker.domain=traefik --docker.watch
      --defaultentrypoints=http,https
      --entryPoints="Name:http Address::80 Redirect.EntryPoint:https"
      --entryPoints="Name:https Address::443 TLS"
      --acme --acme.email=webmaster@ghn.me
      --acme.domains=rhea.ghn.me,puppet.ghn.me,puppetca.ghn.me
      --acme.domains=vps159021.vps.ovh.ca
      --acme.entryPoint=https
      --acme.httpChallenge.entryPoint=http
      --acme.storage=/certs/acme.json
    ports:
      - '80:80'
      - '443:443'
      - mode: host
        target: 8080
        published: 8888
    volumes:
      - certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - frontend
      - encrypted
    labels:
      container_group: lbs
    deploy:
      placement:
        constraints:
          - node.role == manager
  webhook:
    image: almir/webhook:latest
    hostname: webhook-rhea
    secrets:
      - source: webhooks.json_v2
        target: /etc/webhooks/webhooks.json
    command: -verbose -hooks=/etc/webhooks/webhooks.json -hotreload
    networks:
      - encrypted
    labels:
      container_group: webhooks
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
      labels:
        traefik.tags: 'webhook'
        traefik.port: '9000'
        traefik.frontend.rule: 'HostRegexp:vps159021.vps.ovh.ca,{subdomain:[a-z]+}.ghn.me;PathPrefix:/'
        traefik.backend.loadbalancer.stickiness: 'true'
  puppet:
    image: vladgh/ps:latest
    hostname: puppet.ghn.me
    environment:
      AUTOSIGN_CFG: '/run/secrets/puppet_csr.yml'
      DNS_ALT_NAMES: 'puppet,puppet.ghn.me,puppetca,puppetca.ghn.me,puppetdb,puppetdb.ghn.me' # these will be reused by puppetdb
      PUPPETSERVER_JAVA_ARGS: '-Xms128M -Xmx1024M'
    secrets:
      - source: eyaml_private_key.pkcs7.pem
        target: /etc/puppetlabs/puppet/eyaml/eyaml_private_key.pkcs7.pem
      - source: eyaml_public_key.pkcs7.pem
        target: /etc/puppetlabs/puppet/eyaml/eyaml_public_key.pkcs7.pem
      - puppet_csr.yml
    entrypoint: /sbin/tini -- sh -c 'until [ -s /etc/puppetlabs/puppet/ssl/ca/ca_crt.pem ] && [ -s /etc/puppetlabs/code/environments/production/.r10k-deploy.json ]; do echo "Waiting for certificates and R10K..."; sleep 5; done; /entrypoint.sh puppetserver foreground'
    volumes:
      - /home/ubuntu/.aws:/root/.aws
      - ssl:/etc/puppetlabs/puppet/ssl
      - code:/etc/puppetlabs/code
    ports:
      - mode: host
        target: 8140
        published: 8140
    networks:
      - puppet
    labels:
      container_group: puppet
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
  puppetdb:
    image: vladgh/puppetdb:latest
    hostname: puppetdb.ghn.me
    environment:
      PUPPETDB_CERTNAME: 'puppet.ghn.me'
      PUPPETDB_HOST: 'puppetdb.cnvbtnqtrl6k.us-east-1.rds.amazonaws.com'
      PUPPETDB_JAVA_ARGS: '-Xms128M -Xmx1024M'
    secrets:
      - puppetdb_user
      - puppetdb_pass
    volumes:
      - ssl:/etc/puppetlabs/puppet/ssl:ro
    ports:
      - mode: host
        target: 8080
        published: 8001
    networks:
      - puppet
    labels:
      container_group: puppet
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
  puppetboard:
    image: vladgh/puppetboard:latest
    hostname: puppetboard.ghn.me
    ports:
      - mode: host
        target: 8000
        published: 8000
    networks:
      - puppet
    labels:
      container_group: puppet
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
  ssl:
    image: vladgh/s3sync:latest
    hostname: sync-rhea
    environment:
      S3PATH: 's3://vgppt/ssl'
    command: sync
    volumes:
      - /home/ubuntu/.aws:/root/.aws
      - ssl:/sync
    networks:
      - backend
    labels:
      container_group: puppet
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
  r10k:
    image: vladgh/r10k:latest
    hostname: r10k
    environment:
      REMOTE: 'https://github.com/vghn/puppet.git'
      POSTRUN: '["/run/secrets/notify_slack.sh", "R10K deployed"]'
      CRONTIME: '10 * * * *'
    command: 'deploy environment --puppetfile'
    secrets:
      - source: notify_slack.sh
        target: /run/secrets/notify_slack.sh
        mode: 0550
    volumes:
      - code:/etc/puppetlabs/code
      - /var/cache/r10k
    networks:
      - backend
    labels:
      container_group: puppet
      r10k: 'true'
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
  backup:
    image: vladgh/backup:latest
    hostname: backup-rhea
    environment:
      AWS_S3_BUCKET: 'vgbak-rhea'
      GPG_RECIPIENT: 'vlad@ghn.me'
      GPG_KEY_URL: 'https://keybase.io/vgh/key.asc'
    command: cron
    volumes:
      - certs:/backup/certs                           # LetsEncrypt Certificates
      - ssl:/backup/puppet-ca                         # PuppetCA Certificates
      - /home/ubuntu/.aws:/root/.aws                  # AWS Credentials
      - /etc/puppetlabs/puppet/ssl:/backup/puppet-ssl # Puppet Agent Certificates
      - /var/lib/docker/swarm:/backup/swarm           # Swarm state
    networks:
      - backend
    labels:
      container_group: backup
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
  log:
    image: vladgh/ls:latest
    hostname: logs-rhea
    environment:
      BACKLOG: 'false'
      EXCLUDE_LABEL: 'logspout.exclude'
    command: syslog+tls://logs.ghn.me:10514
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend
    labels:
      container_group: logs
    deploy:
      mode: global
  cadvisor:
    image: google/cadvisor:v0.30.2
    hostname: cadvisor-rhea
    volumes:
      - /:/rootfs:ro
      - /dev/disk/:/dev/disk:ro
      - /sys:/sys:ro
      - /var/run:/var/run:rw
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - mode: host
        target: 8080
        published: 9101
    networks:
      - backend
    labels:
      container_group: monitoring
    deploy:
      mode: global

secrets:
  eyaml_private_key.pkcs7.pem:
    external: true
  eyaml_public_key.pkcs7.pem:
    external: true
  notify_slack.sh:
    external: true
  puppet_csr.yml:
    external: true
  puppetdb_pass:
    external: true
  puppetdb_user:
    external: true
  webhooks.json_v2:
    external: true

volumes:
  ssl:
  code:
  certs:

networks:
  frontend:
    ipam:
      config:
        - subnet: 10.0.1.0/24 # Should not conflict with the AWS VPC
  encrypted:
    driver: overlay
    driver_opts:
      encrypted: ""
    ipam:
      config:
        - subnet: 10.0.2.0/24 # Should not conflict with the AWS VPC
  puppet:
    driver: overlay
    driver_opts:
      encrypted: ""
    ipam:
      config:
        - subnet: 10.0.3.0/24 # Should not conflict with the AWS VPC
  backend:
    driver: overlay
    driver_opts:
      encrypted: ""
    ipam:
      config:
        - subnet: 10.0.4.0/24 # Should not conflict with the AWS VPC
