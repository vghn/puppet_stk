#!/usr/bin/env bash
# GIT Pre-Commit Hook

# Load environment
# shellcheck disable=1090
. "$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd -P)/.env.sh"

# Add /usr/local/bin to PATH
PATH=/usr/local/bin:${PATH}

# Throw error
throw_error() {
  e_error "$@"
  syntax_is_bad=1
}

# Make sure the necessary tools are installed. If they aren't, just die and
# stop the commit. Force the use of these tools before a commit is allowed.
# No commit should ever happen without a proper check.

is_cmd aws || e_abort "The aws binary wasn't found."
is_cmd packer || e_abort "The packer binary wasn't found."
is_cmd shellcheck || e_abort "The shellcheck binary wasn't found."

# Checks

check_bash_syntax(){
  e_info 'Checking if bash syntax is valid'
  for file in $(git diff --name-only --cached | grep -E '\.sh$'); do
    if [[ -f $file ]]; then
      if shellcheck "$file"; then
        e_ok "$file looks valid"
      else
        throw_error "Bash syntax validation failed at: $file"
      fi
    fi
  done
}

check_cloudformation_syntax(){
  e_info 'Checking if CloudFormation syntax is valid'
  for file in $(git diff --name-only --cached | grep -E 'cfn\/.*\.(json|yaml)'); do
    if [[ -f $file ]]; then
      if aws cloudformation validate-template \
        --template-body "file://${file}" --output text; then
          e_ok "$file looks valid"
      else
        throw_error "Cloudformation syntax validation failed at: $file"
      fi
    fi
  done
}

check_packer_syntax(){
  e_info 'Checking if Packer syntax is valid'
  for file in $(git diff --name-only --cached | grep -E '.\-packer\.json'); do
    if "${APPDIR}/bin/ami" validate; then
      e_ok 'Packer syntax looks valid'
    else
      throw_error 'Packer syntax validation failed'
    fi
  done
}

main(){
  # Report
  check_bash_syntax
  check_cloudformation_syntax
  check_packer_syntax

  if [[ ${syntax_is_bad:-0} -eq 1 ]]; then
    e_abort "Please fix the errors above before committing your code"
  else
    e_ok "Everything looks good."
  fi
}

main "$@"
