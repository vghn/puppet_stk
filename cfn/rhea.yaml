Description: VGH RHEA

Parameters:
  ControlRepoArchive:
    Description: The S3 path for the puppet control repository
    Type: String
  EFSVolumeID:
    Description: The id of the EFS volume
    Type: String
  ElasticLoadBalancer:
    Description: The Elastic Load Balancer name
    Type: String
  EnvType:
    Default: production
    Description: The environment type
    Type: String
  IamInstanceProfile:
    Description: The instance profile
    Type: String
  ImageID:
    Description: The base image id
    Type: AWS::EC2::Image::Id
  InstanceType:
    Default: t2.micro
    Description: The instance type for the EC2 instance
    Type: String
  KeyName:
    Description: The name of the key pair used to log into the EC2 instance via SSH
    Type: AWS::EC2::KeyPair::KeyName
  SecurityGroupIDs:
    Description: The list of security group ids
    Type: List<AWS::EC2::SecurityGroup::Id>
  SubnetIDs:
    Description: The list of subnet ids
    Type: List<AWS::EC2::Subnet::Id>
  Version:
    Default: 0.0.0
    Description: The version number
    Type: String

Resources:
  RheaASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref RheaLaunchConfig
      DesiredCapacity: '1'
      MinSize: '0'
      MaxSize: '1'
      Cooldown: '600'
      HealthCheckGracePeriod: '600'
      HealthCheckType: ELB
      LoadBalancerNames: !Ref ElasticLoadBalancer
      VPCZoneIdentifier: !Ref SubnetIDs
      Tags:
        - Key: Role
          PropagateAtLaunch: 'true'
          Value: rhea
        - Key: Name
          PropagateAtLaunch: 'true'
          Value: Rhea
      TerminationPolicies:
      - OldestInstance
      - Default
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '1'
        MinInstancesInService: '0'
        MinSuccessfulInstancesPercent: '0'
        PauseTime: PT10M
        WaitOnResourceSignals: 'true'
  RheaLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          Common:
          - WriteFacts
          Create:
          - Common
          - ConfigureCF
          - ConfigureNode
          - StartVPM
          - BootstrapNode
          Update:
          - Common
          - StartVPM
          - UpdateNode
        BootstrapNode:
          commands:
            01_wait_for_puppet_server:
              command: 'until nc -z puppet 8140; do sleep 10; done; sleep 5'
            02_bootstrap_node:
              command: 'sudo -E /opt/vpm/bin/bootstrap'
              env:
                PP_APPLICATION: vpm
                PP_PROJECT: vgh
                PP_ROLE: rhea
        ConfigureCF:
          commands:
            01-start-hup:
              command: '/usr/local/bin/cfn-hup'
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.RheaLaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/usr/local/bin/cfn-init --resource RheaLaunchConfig --configsets Update --stack ${AWS::StackName} --region ${AWS::Region]
                runas=root
              mode: '000644'
              owner: root
              group: root
        ConfigureNode:
          commands:
            01_set_puppet_host:
              command: '/opt/puppetlabs/bin/puppet resource host puppet ip="$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)"'
            02_set_certname:
              command: '/opt/puppetlabs/bin/puppet config set certname "$(curl -s http://169.254.169.254/latest/meta-data/instance-id)" --section main'
            03_patch_ssm_agent:
              command: 'systemctl enable amazon-ssm-agent.service && systemctl restart amazon-ssm-agent.service'
        StartVPM:
          commands:
            01_reset_repo:
              command: 'git fetch --all && git reset --hard origin/production'
              cwd: '/opt/vpm'
            02_pull_images:
              command: 'docker-compose pull'
              cwd: '/opt/vpm'
            03_build_images:
              command: 'docker-compose build'
              cwd: '/opt/vpm'
            04_start_vpm:
              command: 'docker-compose up -d'
              cwd: '/opt/vpm'
        UpdateNode:
          commands:
            01_enter_standby:
              command: "bash -c '. /opt/vgs/load; nc -z puppet 8140 || vgs_aws_ec2_autoscaling_enter_standby'"
            02_wait_for_puppet_server:
              command: 'until nc -z puppet 8140; do sleep 10; done; sleep 5'
            03_exit_standby:
              command: "bash -c '. /opt/vgs/load; vgs_aws_ec2_autoscaling_exit_standby'"
        WriteFacts:
          files:
            /etc/puppetlabs/facter/facts.d/aws.env.yaml:
              content: !Sub |
                ---
                vpm:
                  version: ${Version}
                  efs_volume_id: ${EFSVolumeID}
              mode: '000400'
              owner: root
              group: root
    Properties:
      ImageId: !Ref ImageID
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups: !Ref SecurityGroupIDs
      IamInstanceProfile: !Ref IamInstanceProfile
      AssociatePublicIpAddress: 'true'
      UserData:
        Fn::Base64: !Sub |
          #!/usr/bin/env bash
          set -euo pipefail
          IFS=$'\n\t'

          echo 'IN_PROGRESS' | tee /var/lib/cloud/instance/status_cfn

          signal_exit(){
            echo 'Signal CloudFormation'
            /usr/local/bin/cfn-signal --exit-code ${!1:-0} \
              --resource RheaASG \
              --stack ${AWS::StackName} \
              --region ${AWS::Region} \
            || true
          }

          trap 'signal_exit $?' EXIT INT TERM

          echo 'Update APT'
          while ! apt-get -qy update; do echo 'Waiting for APT; sleep 1; done

          echo 'Ensure Python PIP is installed'
          command -v pip >/dev/null 2>&1 || apt-get -qy install python-pip

          echo 'Ensure CloudFormation helper scripts are installed'
          [[ -x /usr/local/bin/cfn-init ]] || pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz

          echo ''Run CloudFormation Init''
          /usr/local/bin/cfn-init \
            --resource RheaLaunchConfig \
            --configsets Create \
            --stack ${AWS::StackName} \
            --region ${AWS::Region}

            echo 'SUCCEEDED' | tee /var/lib/cloud/instance/status_cfn
