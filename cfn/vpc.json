{
  "Description": "VGH VPC v0.0.1",

  "Parameters": {
    "NumberOfAZs": {
        "AllowedValues": ["2", "3", "4"],
        "Default": "2",
        "Description": "The number of Availability Zones to use in the VPC. This must match the number of zones in existing in the region.",
        "Type": "String"
    }
  },

  "Mappings": {
    "CIDRs": {
      "us-east-1": {
        "VPC":     "10.1.0.0/16",
        "Subnet1": "10.1.1.0/24",
        "Subnet2": "10.1.2.0/24",
        "Subnet3": "10.1.3.0/24",
        "Subnet4": "10.1.4.0/24"
      },
      "us-west-2": {
        "VPC":     "10.2.0.0/16",
        "Subnet1": "10.2.1.0/24",
        "Subnet2": "10.2.2.0/24",
        "Subnet3": "10.2.3.0/24",
        "Subnet4": "10.2.4.0/24"
      }
    }
  },

  "Conditions": {
    "3AZCondition": {
      "Fn::Or": [
        {"Fn::Equals": [{"Ref": "NumberOfAZs"}, "3"]},
        {"Condition": "4AZCondition"}
      ]
    },
    "4AZCondition": {"Fn::Equals": [{"Ref": "NumberOfAZs"}, "4"]}
  },

  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": {"Fn::FindInMap": ["CIDRs", {"Ref": "AWS::Region"}, "VPC"]},
        "Tags" : [{"Key": "VPC", "Value": "vgh"}]
      }
    },

    "Subnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "AvailabilityZone": {"Fn::Select": ["0", {"Fn::GetAZs": {"Ref": "AWS::Region"}}]},
        "VpcId": {"Ref": "VPC" },
        "CidrBlock": {"Fn::FindInMap": ["CIDRs", {"Ref": "AWS::Region"}, "Subnet1"]}
      }
    },
    "Subnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "AvailabilityZone": {"Fn::Select": ["1", {"Fn::GetAZs": {"Ref": "AWS::Region"}}]},
        "VpcId": {"Ref": "VPC" },
        "CidrBlock": {"Fn::FindInMap": ["CIDRs", {"Ref": "AWS::Region"}, "Subnet2"]}
      }
    },
    "Subnet3": {
      "Condition": "3AZCondition",
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "AvailabilityZone": {"Fn::Select": ["2", {"Fn::GetAZs": {"Ref": "AWS::Region"}}]},
        "VpcId": {"Ref": "VPC" },
        "CidrBlock": {"Fn::FindInMap": ["CIDRs", {"Ref": "AWS::Region"}, "Subnet3"]}
      }
    },
    "Subnet4": {
      "Condition": "4AZCondition",
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "AvailabilityZone": {"Fn::Select": ["3", {"Fn::GetAZs": {"Ref": "AWS::Region"}}]},
        "VpcId": {"Ref": "VPC" },
        "CidrBlock": {"Fn::FindInMap": ["CIDRs", {"Ref": "AWS::Region"}, "Subnet4"]}
      }
    },

    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "AttachGateway": {
       "Type": "AWS::EC2::VPCGatewayAttachment",
       "Properties": {
         "VpcId": {"Ref": "VPC"},
         "InternetGatewayId": {"Ref": "InternetGateway"}
       }
    },

    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "VPC"}
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": {"Ref": "RouteTable"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {"Ref": "InternetGateway"}
      }
    },
    "Subnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "Subnet1"},
        "RouteTableId": {"Ref": "RouteTable"}
      }
    },
    "Subnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "Subnet2"},
        "RouteTableId": {"Ref": "RouteTable"}
      }
    },
    "Subnet3RouteTableAssociation": {
      "Condition": "3AZCondition",
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "Subnet3"},
        "RouteTableId": {"Ref": "RouteTable"}
      }
    },
    "Subnet4RouteTableAssociation": {
      "Condition": "4AZCondition",
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "Subnet4"},
        "RouteTableId": {"Ref": "RouteTable"}
      }
    },

    "NetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {"Ref": "VPC"}
      }
    },
    "Subnet1NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "Subnet1"},
        "NetworkAclId": {"Ref": "NetworkAcl"}
      }
    },
    "Subnet2NetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "Subnet2"},
        "NetworkAclId": {"Ref": "NetworkAcl"}
      }
    },
    "Subnet3NetworkAclAssociation": {
      "Condition": "3AZCondition",
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "Subnet3"},
        "NetworkAclId": {"Ref": "NetworkAcl"}
      }
    },
    "Subnet4NetworkAclAssociation": {
      "Condition": "4AZCondition",
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "Subnet4"},
        "NetworkAclId": {"Ref": "NetworkAcl"}
      }
    },

    "InBoundAllTrafficNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NetworkAcl"},
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "OutBoundAllTrafficNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NetworkAcl"},
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0"
      }
    }
  },

  "Outputs": {
    "VPCId":   { "Description": "The VPC ID", "Value": {"Ref": "VPC"} },
    "SubnetIDs": {
      "Description": "Subnet IDs",
      "Value": {"Fn::Join": [",", [
        {"Ref": "Subnet1"},
        {"Ref": "Subnet2"},
        {"Fn::If": ["3AZCondition", {"Ref": "Subnet3"}, {"Ref" : "AWS::NoValue"}]},
        {"Fn::If": ["4AZCondition", {"Ref": "Subnet4"}, {"Ref" : "AWS::NoValue"}]}
      ]]}
    }
  }
}
