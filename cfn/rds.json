{
  "Description": "VGH RDS v0.0.1",

  "Parameters": {
    "EnvType": {
      "Type": "String",
      "Description": "The environment type",
      "Default": "production"
    },
    "SubnetIDs": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The list of subnet ids"
    },
    "SecurityGroupIDs": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>",
      "Description": "The list of security group ids"
    },
    "DBEngine": {
      "Default": "mariadb",
      "Description": "MySQL engine",
      "Type": "String",
      "AllowedValues": ["MySQL", "mariadb", "postgres"],
      "ConstraintDescription": "must select a valid database engine"
    },
    "DBName": {
      "Default": "myDatabase",
      "Description" : "MySQL database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters (max 64)"
    },
    "DBUser": {
      "NoEcho": "true",
      "Description" : "Username for MySQL database access",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters (max 16)"
    },
    "DBPassword": {
      "NoEcho": "true",
      "Description" : "Password for MySQL database access",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "64",
      "ConstraintDescription" : "must be between 8 and 64 characters"
    }
  },

  "Resources": {
    "DB": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": {"Ref": "DBEngine" },
        "DBName": {"Ref": "DBName" },
        "MasterUsername": {"Ref": "DBUser"},
        "MasterUserPassword": {"Ref": "DBPassword"} ,
        "DBInstanceClass": "db.t2.micro",
        "BackupRetentionPeriod": "3",
        "AllocatedStorage": "5",
        "StorageType": "gp2",
        "MultiAZ": "false",
        "VPCSecurityGroups": {"Ref": "SecurityGroupIDs"},
        "DBSubnetGroupName": {"Ref": "DBSubnetGroup"}
      },
      "DeletionPolicy": "Snapshot"
    },
    "DBSubnetGroup": {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
        "DBSubnetGroupDescription" : "DB Subnet Group",
        "SubnetIds": {"Ref": "SubnetIDs"}
      }
    }
  },

  "Outputs": {
    "DBEndpoint": {
      "Description": "The database endpoint",
      "Value": {"Fn::GetAtt": ["DB", "Endpoint.Address"]}
    }
  }
}
