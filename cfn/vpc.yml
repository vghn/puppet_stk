Description: VGH VPC

Parameters:
  EnvType:
    Default: production
    Description: The environment type
    Type: String
  NumberOfAZs:
    Type: String
    AllowedValues:
    - '2'
    - '3'
    - '4'
    Default: '2'
    Description: The number of Availability Zones to use in the VPC. This must match
      the number of zones in existing in the region.

Conditions:
  3AZCondition: !Or [ !Equals [!Ref NumberOfAZs, '3' ], Condition: 4AZCondition ]
  4AZCondition: !Equals [!Ref NumberOfAZs, '4']

Mappings:
  CIDRs:
    us-east-1:
      VPC: 10.1.0.0/16
      Subnet1: 10.1.1.0/24
      Subnet2: 10.1.2.0/24
      Subnet3: 10.1.3.0/24
      Subnet4: 10.1.4.0/24
    us-west-1:
      VPC: 10.2.0.0/16
      Subnet1: 10.2.1.0/24
      Subnet2: 10.2.2.0/24
    us-west-2:
      VPC: 10.3.0.0/16
      Subnet1: 10.3.1.0/24
      Subnet2: 10.3.2.0/24
      Subnet3: 10.3.3.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [CIDRs, !Ref "AWS::Region", VPC]
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
      - Key: VPC
        Value: vgh
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  InBoundAllTrafficNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'false'
      NetworkAclId: !Ref NetworkAcl
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  NetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
  OutBoundAllTrafficNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      NetworkAclId:
        Ref: NetworkAcl
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  Subnet1:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !FindInMap [CIDRs, !Ref "AWS::Region", Subnet1]
      VpcId: !Ref VPC
  Subnet1NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref Subnet1
  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet1
  Subnet2:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !FindInMap [CIDRs, !Ref "AWS::Region", Subnet2]
      VpcId: !Ref VPC
  Subnet2NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref Subnet2
  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet2
  Subnet3:
    Type: AWS::EC2::Subnet
    Condition: 3AZCondition
    DependsOn: AttachGateway
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '2'
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !FindInMap [CIDRs, !Ref "AWS::Region", Subnet3]
      VpcId: !Ref VPC
  Subnet3NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: 3AZCondition
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref Subnet3
  Subnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 3AZCondition
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet3
  Subnet4:
    Type: AWS::EC2::Subnet
    Condition: 4AZCondition
    DependsOn: AttachGateway
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '3'
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !FindInMap [CIDRs, !Ref "AWS::Region", Subnet4]
      VpcId: !Ref VPC
  Subnet4NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: 4AZCondition
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref Subnet4
  Subnet4RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: 4AZCondition
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet4

Outputs:
  SubnetIDs:
    Description: Subnet IDs
    Value: !Join [',', [!Ref Subnet1, !Ref Subnet2, !If [3AZCondition, !Ref Subnet3, !Ref "AWS::NoValue"], !If [4AZCondition, !Ref Subnet4, !Ref "AWS::NoValue"]]]
  VPCId:
    Description: The VPC ID
    Value: !Ref VPC
