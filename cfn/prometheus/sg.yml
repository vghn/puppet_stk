Description: Prometheus SG

Parameters:
  EnvType:
    Default: production
    Description: The environment type
    Type: String
  TrustedIPs:
    Description: The IP address ranges that can be trusted
    Type: CommaDelimitedList

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Prometheus Firewall
      VpcId: !ImportValue VPCId
  SecurityGroupAllowSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt SecurityGroup.GroupId
      FromPort: '0'
      ToPort: '65535'
      IpProtocol: tcp
      SourceSecurityGroupId: !GetAtt SecurityGroup.GroupId
  SecurityGroupAllowSSH:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt SecurityGroup.GroupId
      FromPort: '22'
      ToPort: '22'
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0
  SecurityGroupAllowHTTP:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt SecurityGroup.GroupId
      FromPort: '80'
      ToPort: '80'
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0
  SecurityGroupAllowHTTPS:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt SecurityGroup.GroupId
      FromPort: '443'
      ToPort: '443'
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0
  SecurityGroupAllowTrustedIPs1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt SecurityGroup.GroupId
      FromPort: '22'
      ToPort: '22'
      IpProtocol: tcp
      CidrIp: !Select ['0', !Ref TrustedIPs]
  SecurityGroupAllowTrustedIPs2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt SecurityGroup.GroupId
      FromPort: '22'
      ToPort: '22'
      IpProtocol: tcp
      CidrIp: !Select ['1', !Ref TrustedIPs]
  SecurityGroupAllowLogs:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt SecurityGroup.GroupId
      FromPort: '10514'
      ToPort: '10514'
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0

Outputs:
  SecurityGroup:
    Description: The Prometheus Security Group
    Value: !Ref SecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}"
