version: '3.3'

services:
  lb:
    image: vladgh/lb:latest
    environment:
      CERT_FOLDER: '/certs'
      LIVE_CERT_FOLDER: '/etc/letsencrypt/live'
    ports:
      - '80:80'
      - '443:443'
      - '8140:8140'
      - mode: host
        target: 1936
        published: 1936
    volumes:
      - certs:/certs
      - letsencrypt:/etc/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - frontend
      - encrypted
      - puppet
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
  webhook:
    image: vladgh/wh:latest
    hostname: webhook
    environment:
      API_CONFIG: '/run/secrets/webhook.yml'
      SERVICE_PORTS: '8523'
      FORCE_SSL: 'yes'
      VIRTUAL_HOST: 'http://*,https://*'
    secrets:
      - webhook.yml
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - encrypted
    deploy:
      mode: global
  puppet:
    image: vladgh/ps:latest
    hostname: puppet.ghn.me
    environment:
      AUTOSIGN_CFG: '/run/secrets/puppet_csr.yml'
      DNS_ALT_NAMES: 'puppet,puppet.ghn.me,puppetca,puppetca.ghn.me,puppetdb,puppetdb.ghn.me' # these will be reused by puppetdb
      PUPPETSERVER_JAVA_ARGS: '-Xms32M -Xmx512M'
      SERVICE_PORTS: '8140'
      TCP_PORTS: '8140'
    secrets:
      - puppet_csr.yml
      - source: aws_credentials_rhea
        target: aws_credentials
    entrypoint: /sbin/tini -- sh -c 'mkdir -p ~/.aws; ln -s /run/secrets/aws_credentials_rhea ~/.aws/credentials; until [ -s /etc/puppetlabs/code/environments/production/.r10k-deploy.json ]; do echo "Waiting for R10K..."; sleep 5; done; /entrypoint.sh puppetserver foreground'
    volumes:
      - ssl:/etc/puppetlabs/puppet/ssl
      - code:/etc/puppetlabs/code
    networks:
      - puppet
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
  puppetdb:
    image: vladgh/puppetdb:latest
    hostname: puppetdb.ghn.me
    environment:
      PUPPETDB_CERTNAME: 'puppet.ghn.me'
      PUPPETDB_HOST: 'pdhmbnpv0r5lty.cwmrzqfvkzxh.us-east-1.rds.amazonaws.com'
      PUPPETDB_JAVA_ARGS: '-Xms32M -Xmx128M'
    secrets:
      - puppetdb_user
      - puppetdb_pass
    volumes:
      - ssl:/etc/puppetlabs/puppet/ssl:ro
    ports:
      - mode: host
        target: 8080
        published: 8080
    networks:
      - frontend
      - puppet
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
  puppetboard:
    image: vladgh/puppetboard:latest
    hostname: puppetboard.ghn.me
    ports:
      - mode: host
        target: 8000
        published: 8000
    networks:
      - frontend
      - puppet
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
  letsencrypt:
    image: vladgh/le:latest
    hostname: letsencrypt-agent
    environment:
      SERVICE_PORTS: '80'
      VIRTUAL_HOST: '*/.well-known/acme-challenge/*'
      VIRTUAL_HOST_WEIGHT: '999'
      DOMAINS: 'rhea.ghn.me,puppet.ghn.me,puppetca.ghn.me'
      EMAIL: 'webmaster@ghn.me'
      LOAD_BALANCER_SERVICE_NAME: 'lb'
    volumes:
      - letsencrypt:/etc/letsencrypt
    networks:
      - encrypted
  ssl:
    image: vladgh/s3sync:latest
    hostname: ssl-sync-agent
    environment:
      S3PATH: 's3://vgast/puppet/ssl'
    secrets:
      - source: aws_credentials_rhea
        target: aws_credentials
    command: sync
    volumes:
      - ssl:/sync
    networks:
      - backend
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
  r10k:
    image: vladgh/r10k:latest
    hostname: r10k-agent
    environment:
      REMOTE: 'https://github.com/vghn/puppet.git'
      CRON_TIME: '10 * * * *'
    command: 'r10k deploy environment --puppetfile'
    volumes:
      - code:/etc/puppetlabs/code
      - /var/cache/r10k
    networks:
      - backend
    deploy:
      placement:
        constraints:
          - node.labels.role == rhea
  backup:
    image: vladgh/backup:latest
    hostname: backup-agent
    environment:
      AWS_S3_BUCKET: 'vgbak'
      AWS_S3_PREFIX: 'rhea'
      GPG_RECIPIENT: 'vlad@ghn.me'
      GPG_KEY_URL: 'https://keybase.io/vgh/key.asc'
    secrets:
      - source: aws_credentials_rhea
        target: aws_credentials
    command: cron
    volumes:
      - letsencrypt:/backup/letsencrypt               # LetsEncrypt Certificates
      - ssl:/backup/puppet-ca                         # PuppetCA Certificates
      - /etc/puppetlabs/puppet/ssl:/backup/puppet-ssl # Puppet Agent Certificates
      - /var/lib/docker/swarm:/backup/swarm           # Swarm state
    networks:
      - backend
    deploy:
      mode: global
  log:
    image: logzio/logzio-docker:v2.4
    hostname: log-agent
    secrets:
      - logzio_token
    entrypoint: sh -c "/usr/src/app/index.js --token \"$$(cat /run/secrets/logzio_token)\" --add env=prod --add role=rhea"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend
    deploy:
      mode: global

secrets:
  aws_credentials_rhea:
    external: true
  webhook.yml:
    external: true
  puppet_csr.yml:
    external: true
  puppetdb_user:
    external: true
  puppetdb_pass:
    external: true
  logzio_token:
    external: true

volumes:
  ssl:
    driver: local
  code:
    driver: local
  certs:
    driver: local
  letsencrypt:
    driver: local

networks:
  frontend:
  encrypted:
    driver: overlay
    driver_opts:
      encrypted: ""
  puppet:
    driver: overlay
    driver_opts:
      encrypted: ""
  backend:
    driver: overlay
    driver_opts:
      encrypted: ""
