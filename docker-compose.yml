version: '3'

services:
  lb:
    image: vladgh/lb:latest
    links:
      - api
      - puppet
      - letsencrypt
    environment:
      CERT_FOLDER: '/certs'
      LIVE_CERT_FOLDER: '/etc/letsencrypt/live'
    ports:
      - '80:80'
      - '443:443'
      - '8140:8140'
    restart: unless-stopped
    volumes:
      - certs:/certs
      - letsencrypt:/etc/letsencrypt
      - secrets:/var/secrets
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    networks:
      - frontend
      - backend
  api:
    image: vladgh/wh:latest
    hostname: api
    environment:
      API_CONFIG: '/var/secrets/api.yml'
      SERVICES: 'secrets,r10k'
      FORCE_SSL: 'yes'
      VIRTUAL_HOST: 'http://*,https://*'
    entrypoint: /sbin/tini -- sh -c 'until [ -s /var/secrets/api.yml ]; do echo "Waiting for configuration..."; sleep 5; done; sh -c "bundle exec puma --environment $${RACK_ENV} --port $${RACK_PORT}"'
    restart: unless-stopped
    volumes:
      - secrets:/var/secrets
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    networks:
      - backend
  puppet:
    image: vladgh/ps:latest
    hostname: puppet.ghn.me
    environment:
      AUTOSIGN_CFG: '/var/secrets/csr.yml'
      DNS_ALT_NAMES: 'puppet,puppet.ghn.me,puppetca,puppetca.ghn.me,puppetdb,puppetdb.ghn.me' # these will be reused by puppetdb
      PUPPETSERVER_JAVA_ARGS: '-Xms512M -Xmx512M'
      TCP_PORTS: '8140'
    links:
      - puppetdb
    entrypoint: /sbin/tini -- sh -c 'until [ -s $${AUTOSIGN_CFG} ] && [ -s /etc/puppetlabs/code/environments/production/.r10k-deploy.json ]; do echo "Waiting for secrets and R10K..."; sleep 5; done; /entrypoint.sh puppetserver foreground'
    restart: unless-stopped
    volumes:
      - ssl:/etc/puppetlabs/puppet/ssl
      - secrets:/var/secrets
      - code:/etc/puppetlabs/code
      - ~/.aws:/root/.aws:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - backend
  puppetdb:
    image: vladgh/puppetdb:latest
    hostname: puppetdb.ghn.me
    environment:
      PUPPETDB_JAVA_ARGS: '-Xms512M -Xmx512M'
    ports:
      - '8080:8080'
    entrypoint: /sbin/tini -- sh -c 'until [ -s /var/secrets/puppetdb_credentials ]; do echo "Waiting for credentials..."; sleep 5; done; ln -fsn /var/secrets/puppetdb_credentials /etc/puppetlabs/puppetdb/conf.d/database.conf && puppet config set certname puppet.ghn.me --section main && /entrypoint.sh puppetdb foreground'
    restart: unless-stopped
    volumes:
      - ssl:/etc/puppetlabs/puppet/ssl
      - secrets:/var/secrets
      - /etc/localtime:/etc/localtime:ro
    networks:
      - backend
  letsencrypt:
    image: vladgh/le:latest
    environment:
      VIRTUAL_HOST: '*/.well-known/acme-challenge/*'
      VIRTUAL_HOST_WEIGHT: '999'
      DOMAINS: 'rhea.ghn.me,puppet.ghn.me,puppetca.ghn.me'
      EMAIL: 'webmaster@ghn.me'
      LOAD_BALANCER_SERVICE_NAME: 'lb'
    volumes:
      - letsencrypt:/etc/letsencrypt
    networks:
      - backend
  ssl:
    image: vladgh/s3sync:latest
    hostname: ssl-sync-agent
    environment:
      S3PATH: 's3://vgast/puppet/ssl'
    command: sync
    restart: unless-stopped
    volumes:
      - ssl:/sync
      - ~/.aws:/root/.aws:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - backend
  secrets:
    image: vladgh/s3sync:latest
    hostname: secrets-sync-agent
    environment:
      S3PATH: 's3://vgsec'
    command: periodic_download
    volumes:
      - secrets:/sync
      - ~/.aws:/root/.aws:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - backend
  r10k:
    image: vladgh/r10k:latest
    hostname: r10k-agent
    environment:
      REMOTE: 'https://github.com/vghn/puppet.git'
      CRON_TIME: '10 * * * *'
    command: 'r10k deploy environment --puppetfile'
    volumes:
      - code:/etc/puppetlabs/code
      - /etc/localtime:/etc/localtime:ro
      - /var/cache/r10k
    networks:
      - backend
  log:
    hostname: log-agent
    image: gliderlabs/logspout:latest
    command: syslog+tls://logs4.papertrailapp.com:11854
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    networks:
      - backend
  backup:
    image: vladgh/backup:latest
    environment:
      AWS_S3_BUCKET: 'vgbak'
      AWS_S3_PREFIX: 'rhea'
      GPG_RECIPIENT: 'vlad@ghn.me'
      GPG_KEY_URL: 'https://keybase.io/vgh/key.asc'
    volumes:
      - ssl:/backup/puppetca
      - letsencrypt:/backup/letsencrypt
      - ~/.aws:/root/.aws:ro
      - /etc/localtime:/etc/localtime:ro
    command: cron
    restart: unless-stopped

volumes:
  ssl:
  code:
  certs:
  letsencrypt:
  secrets:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: "size=100m,nodev,nosuid"

networks:
  frontend:
  backend:
