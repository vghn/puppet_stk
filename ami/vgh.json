{
  "variables": {
    "environment": "{{env `ENVTYPE`}}",
    "version": "{{env `VERSION`}}",
    "region": "{{env `AWS_DEFAULT_REGION`}}",
    "base_ami": "{{env `AWS_BASE_AMI`}}",
    "iam_instance_profile": "{{env `AWS_IAM_INSTANCE_PROFILE`}}"
  },

  "builders": [
    {
      "name": "VGH",
      "type": "amazon-ebs",
      "ami_name": "VGH_v{{user `version`}}_{{timestamp}}",
      "ami_description": "VGH Image (v{{user `version`}})",
      "region": "{{user `region`}}",
      "source_ami": "{{user `base_ami`}}",
      "instance_type": "t2.micro",
      "ssh_username": "ubuntu",
      "iam_instance_profile": "{{user `iam_instance_profile`}}",
      "run_tags": {
        "Name": "VGH AMI",
        "Group": "vgh",
        "Project": "vgh"
      },
      "tags": {
        "Name": "VGH AMI",
        "Group": "vgh",
        "Project": "vgh"
      }
    }
  ],

  "provisioners": [
    {
      "inline": "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 5; done",
      "type": "shell"
    },{
      "inline": [
        "sudo apt-get -qy update",
        "sudo apt-get -qy upgrade",
        "sudo apt-get -qy install git"
      ],
      "type": "shell"
    },{
      "environment_vars": [
        "PP_ROLE=rhea",
        "PP_PROJECT=vgh",
        "PP_APPLICATION=vpm",
        "ENVTYPE={{user `environment`}}"
      ],
      "execute_command": "{{ .Vars }} sudo -E bash -e '{{ .Path }}'",
      "inline": [
        "git clone https://github.com/vghn/vgs.git /opt/vgs",
        "git clone -b $ENVTYPE https://github.com/vghn/puppet.git /opt/vpm",

        "PP_AGENT_RUN=false /opt/vpm/bin/bootstrap",
        "mkdir -p /tmp/modules",
        "/opt/puppetlabs/bin/puppet module install --modulepath=/tmp/modules garethr-docker --version 5.3.0",
        "/opt/puppetlabs/bin/puppet apply --modulepath=/tmp/modules -e 'include ::docker, ::docker::compose'",
        "docker-compose -f /opt/vpm/docker-compose.yml up -d server",

        "/opt/puppetlabs/bin/puppet resource host puppet ip=\"$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\"",
        "/opt/puppetlabs/bin/puppet config set certname \"$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\"",
        "until nc -z puppet 8140; do echo 'Waiting for Puppet'; sleep 10; done && sleep 5",
        "/opt/vpm/bin/bootstrap",

        "rm -r /etc/puppetlabs/puppet/{ssl,puppet.conf} || true"
      ],
      "type": "shell",
      "only": ["VGH"]
    }
  ],

  "post-processors": [
    {
      "inline": ["bin/ami clean"],
      "type": "shell-local",
      "only": ["VGH"]
    }
  ]
}
