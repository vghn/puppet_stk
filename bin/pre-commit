#!/usr/bin/env bash
# GIT Pre-Commit Hook

# Load environment
# shellcheck disable=1090
. "$(cd "$(dirname "${BASH_SOURCE[0]}")/../../" && pwd -P)/envrc"

# Add /usr/local/bin to PATH
PATH=/usr/local/bin:${PATH}

# Make sure the necessary tools are installed. If they aren't, just die and
# stop the commit. Force the use of these tools before a commit is allowed.
# No commit should ever happen without a proper check.

is_cmd aws || e_abort "The aws binary wasn't found."
is_cmd packer || e_abort "The packer binary wasn't found."
is_cmd shellcheck || e_abort "The shellcheck binary wasn't found."

# Checks

e_info 'Checking if CloudFormation syntax is valid'
for file in $(git diff --name-only --cached | grep -E 'cfn\/.*\.(json)'); do
  if [[ -f $file ]]; then
    aws --region 'us-west-2' --output text \
      cloudformation validate-template \
      --template-body "file://${file}"
    if [[ $? -ne 0 ]]; then
      e_error "Cloudformation syntax validation failed at: $file"
      syntax_is_bad=1
    else
      e_ok "$file looks valid"
    fi
  fi
done

e_info 'Checking if Packer syntax is valid'
if ! "${APPDIR}/bin/ami" validate; then
  e_error 'Packer syntax validation failed'
  syntax_is_bad=1
else
  e_ok 'Packer syntax looks valid'
fi

e_info 'Checking if bash syntax is valid'
for file in $(git diff --name-only --cached | grep -E '\.sh$'); do
  if [[ -f $file ]]; then
    shellcheck "$file"
    if [[ $? -ne 0 ]]; then
      e_error "Bash syntax validation failed at: $file"
      syntax_is_bad=1
    else
      e_ok "$file looks valid"
    fi
  fi
done

# Report
if [[ ${syntax_is_bad:-0} -eq 1 ]]; then
  e_abort "Please fix the errors above before committing your code"
else
  e_ok "Everything looks good."
fi
