#!/usr/bin/env bash
# GIT Pre-Commit Hook
#
# Prerequisites:
#   gem install puppet-lint puppet
#
# Install:
#  /path/to/repo/.git/hooks/pre-commit
#
# Authors:
#  Vlad Ghinea
#  Ronny Roethof
#  Mattias Geniar <m@ttias.be>
#  Rob Nelson <rnelson0@gmail.com>

# Load environment
# shellcheck disable=1090
. "$(cd "$(dirname "${BASH_SOURCE[0]}")/../../" && pwd -P)/envrc"

# Add /usr/local/bin to PATH
PATH=/usr/local/bin:${PATH}

# Make sure the necessary tools are installed. If they aren't, just die and
# stop the commit. Force the use of these tools before a commit is allowed.
# No commit should ever happen without a proper check.

path_to_aws=$(command -v aws)
if ! [ -x "$path_to_aws" ]; then
  echo "The AWS CLI binary wasn't found."
  echo "Sorry, I won't allow you to commit without aws cli installed."
  echo "Please install aws cli and try again."
  exit 1
fi

path_to_shellcheck=$(command -v shellcheck)
if ! [ -x "$path_to_shellcheck" ]; then
  echo "The Shellcheck binary wasn't found."
  echo "Sorry, I won't allow you to commit without shellcheck installed."
  echo "Please install shellcheck and try again."
  exit 1
fi

# Checks

echo "### Checking if CloudFormation syntax is valid ###"
for file in $(git diff --name-only --cached | grep -E 'cfn\/.*\.(json)'); do
  if [[ -f $file ]]; then
    aws --region 'us-west-2' --output text \
      cloudformation validate-template \
      --template-body "file://${file}"
    if [[ $? -ne 0 ]]; then
      echo "ERROR: Cloudformation syntax validation failed at: $file"
      syntax_is_bad=1
    else
       echo "OK: $file looks valid"
    fi
  fi
done
echo ""

echo "### Checking if bash syntax is valid ###"
for file in $(git diff --name-only --cached | grep -E '\.sh$'); do
  if [[ -f $file ]]; then
    shellcheck "$file"
    if [[ $? -ne 0 ]]; then
      echo "ERROR: Bash syntax validation failed at: $file"
      syntax_is_bad=1
    else
       echo "OK: $file looks valid"
    fi
  fi
done
echo ""

# Report
if [[ ${syntax_is_bad:-0} -eq 1 ]]; then
  echo
  echo "################################################################"
  echo -e "### \033[31mPlease fix the errors above before committing your code.\033[0m ###"
  echo "################################################################"
  echo
  exit 1
else
  echo "Everything looks good."
fi
