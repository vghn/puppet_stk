#!/usr/bin/env bash
# Stack CLI

# Load environment
# shellcheck disable=1090
. "$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P)/envrc"

# Usage
usage(){
  echo '---------------------------------------------'
  echo "USAGE: ${BASH_SOURCE[0]} [COMMAND] [SUBCOMMAND] [OPTIONS]"
  echo '---------------------------------------------'
  echo 'Commands:'
  echo ''
  echo '  - ami [build | clean | validate] [NAME]'
  echo ''
  echo '  - cfn [create | update | delete | validate] [STACK]'
  echo '    * Check the cfnrc file for available stacks'
  echo ''
  echo '  - deploy [stack name]'
  echo ''
  echo '  - env'
  echo ''
  echo '  - hooks [install]'
  echo ''
  echo '  - install'
  echo ''
  echo '  - secret [create]'
  echo ''
  echo '  - test'
  echo ''
  echo '----------------------------------------------'
  echo 'For more information please consult the README'
  echo '----------------------------------------------'
  exit 1
}

# Process Stack CLI
stack_process_cli(){
  if [[ -z $1 ]]; then usage; fi

  export cmd="${1:-}"; shift || true
  export scmd="${1:-}"; shift || true

  trap 'bye $?' EXIT HUP INT QUIT TERM
  case "$cmd" in
    ami)
      process_ami_build "${@:-}"
      case "$scmd" in
        build)
          ami_build
          ;;
        clean)
          ami_clean
          ;;
        validate)
          ami_validate
          ;;
        *)
          usage
          ;;
      esac
      clear_ami
      ;;
    cfn)
      process_cfn "${@:-}"
      case "$scmd" in
        create)
          cfn_validate_stack
          cfn_create_stack
          cfn_wait_for_stack
          ;;
        update)
          cfn_validate_stack
          cfn_update_stack
          cfn_wait_for_stack
          ;;
        delete)
          cfn_delete_stack
          ;;
        validate)
          cfn_validate_stack
          ;;
        *)
          usage
          ;;
      esac
      clear_cfn
      ;;
    deploy)
      if [[ -n "$scmd" ]]; then
        deploy_swarm "$scmd"
      else
        usage
      fi
      ;;
    hooks)
      case "$scmd" in
        install)
          install_git_hooks
          ;;
        *)
          usage
          ;;
      esac
      ;;
    install)
      install_vgs
      ;;
    secret)
      create_secret "${@:-}"
      ;;
    test)
      validate_bash
      ;;
    *)
      usage
      ;;
  esac
}

stack_process_cli "${@:-}"
