name: CI

on:
  push:
    branches:
      - master

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      VAULT_VERSION: '1.3.2'
      VAULT_ADDR: 'https://vault.ghn.me:8200'
    strategy:
      fail-fast: false
      matrix:
        stack:
          - name: prometheus
            host: prometheus.ghn.me
    steps:
    - uses: actions/checkout@v2
    - name: Install Vault
      run: |
            wget -q "https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip"
            wget -qO - "https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS" | grep linux_amd64 | sha256sum -c
            sudo unzip -d /usr/local/bin/ "vault_${VAULT_VERSION}_linux_amd64.zip"
            vault version
    - name: Authenticate Vault
      run: |
            VAULT_TOKEN=$(vault write -field=token auth/approle/login role_id=${{ secrets.VAULT_ROLE_ID }} secret_id=${{ secrets.VAULT_SECRET_ID }})
            echo ::add-mask::$VAULT_TOKEN
            echo ::set-env name=VAULT_TOKEN::$VAULT_TOKEN
    - name: Test
      run: |
            docker ps -a
            sudo docker ps -a
    - name: Set-up SSH
      run: |
            sudo mkdir -p /root/.ssh
            echo -e "Host *\n  User ansible\n  StrictHostKeyChecking no\n  GlobalKnownHostsFile /dev/null\n  UserKnownHostsFile /dev/null" | sudo tee /root/.ssh/config
            vault kv get -field=id_rsa vgh/deploy | sudo tee /root/.ssh/id_rsa > /dev/null
            sudo chmod 400 /root/.ssh/id_rsa
    - name: Deploy stack
      run: |
            sudo docker -H ssh://${{ matrix.stack.host }} stack deploy --prune --compose-file ./swarm/${{ matrix.stack.name }}.yml ${{ matrix.stack.name }}
