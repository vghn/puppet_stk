#!/usr/bin/env bash

# Bash strict mode
set -euo pipefail
IFS=$'\n\t'

# VARs
export APPDIR TMPDIR NOW VERSION VERSION_FILE CHANGELOG_FILE
APPDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)"
TMPDIR=$(mktemp -d 2>/dev/null || mktemp -d -t 'tmp')
NOW="$(date +"%Y%m%d_%H%M%S")"
CHANGELOG_FILE="${APPDIR}/CHANGELOG.md"
VERSION=$(git describe --always --tags)

# Load private environment
# shellcheck disable=1090
. "${APPDIR}/.env" 2>/dev/null || true

# Load VGS library (https://github.com/vghn/vgs)
# shellcheck disable=1090,1091
. /opt/vgs/load 2>/dev/null || . ~/vgs/load 2>/dev/null || true

# Detect environment
ENVTYPE="${ENVTYPE:-production}"
detect_environment 2>/dev/null || true
detect_ci_environment 2>/dev/null || true

# Load functions
# shellcheck disable=1090
for file in ${APPDIR}/lib/*.sh; do . "$file"; done

# Project
export GROUP_NAME="${GROUP_NAME:-vgh}"
export PROJECT_NAME="${PROJECT_NAME:-vgh}"

# Full version
export FULL_VERSION=${VERSION}-${GIT_SHA1}

# Trusted IPs
export TRUSTED_IPS="${TRUSTED_IPS:-}"

# Logging
export LOG_SERVER="${LOG_SERVER:-}"
export LOG_PORT="${LOG_PORT:-}"

# Slack Incoming Web Hook URL
export SLACK_CHANNEL="${SLACK_CHANNEL:-bots}"
export SLACK_USER="${SLACK_USER:-VGHStk}"
export SLACK_WEBHOOK="${SLACK_WEBHOOK:-}"

# AWS
export AWS_ACCOUNT_NUMBER="${AWS_ACCOUNT_NUMBER:-}"
export AWS_DEFAULT_REGION="${AWS_DEFAULT_REGION:-us-east-1}"
export AWS_AZ_NUMBER="${AWS_AZ_NUMBER:-4}"
export AWS_SNS_NOTIFICATIONS="${AWS_SNS_NOTIFICATIONS:-"arn:aws:sns:${AWS_DEFAULT_REGION}:${AWS_ACCOUNT_NUMBER}:-NotifyMe"}"
export AWS_SSL_ARN="${AWS_SSL_ARN:-}"
export AWS_CFN_STACKS_PATH="${APPDIR}/cfn"
export AWS_IAM_INSTANCE_PROFILE="${AWS_IAM_INSTANCE_PROFILE:-}"
export AWS_AMI_PACKER="${APPDIR}/ami-packer.json"
export AWS_TAG_GROUP="${AWS_TAG_GROUP:-$GROUP_NAME}"
export AWS_TAG_PROJECT="${AWS_TAG_PROJECT:-$PROJECT_NAME}"
export AWS_ASSETS_BUCKET="vladgh"
export AWS_ENV_S3PATH="s3://${AWS_ASSETS_BUCKET}/env/stk.${ENVTYPE}"
export AWS_RDS_DB_ENGINE="${AWS_RDS_DB_ENGINE:-postgres}"
export AWS_RDS_DB_NAME="${AWS_RDS_DB_NAME:-db}"
export AWS_RDS_DB_USER="${AWS_RDS_DB_USER:-admin}"
export AWS_RDS_DB_PASS="${AWS_RDS_DB_PASS:-ChangeMe}"

# Puppet
export PP_SERVER="${PP_SERVER:-puppet.ghn.me}"
export PP_ARTIFACT="artifacts/vpm_${ENVTYPE}.tgz"

# AWS Image defaults
ami_packer_process(){
  local V
  V="     -var 'base_ami=$(vgs_aws_ec2_get_ubuntu_base_image_id 'xenial-16.04')'"
  V="${V} -var 'iam_instance_profile=$(vgs_aws_cfn_get_output IAM InstanceProfile)'"
  export PACKER_VARS="${V}"
}

# AWS CloudFormation
get_cfn_defaults(){
  local stack A P T
  stack="${1:-}"

  export stacks='efs elb iam rds rhea sg vpc'

  # Default command arguments
  A=''

  # Common tags
  T="     'Key=Group,Value=${AWS_TAG_GROUP}'"
  T="${T} 'Key=Project,Value=${AWS_TAG_PROJECT}'"

  # Stack defaults
  case "$stack" in
    efs)
      export name='EFS'
      export body="${AWS_CFN_STACKS_PATH}/efs.yaml"
      P="     'ParameterKey=EnvType,ParameterValue=${ENVTYPE}'"
      P="${P} 'ParameterKey=VolumeName,ParameterValue=${PROJECT_NAME}'"
      P="${P} 'ParameterKey=NumberOfAZs,ParameterValue=${AWS_AZ_NUMBER}'"
      P="${P} 'ParameterKey=SubnetIDs,ParameterValue=\"$(vgs_aws_cfn_get_output VPC SubnetIDs)\"'"
      P="${P} 'ParameterKey=SecurityGroupIDs,ParameterValue=\"$(vgs_aws_cfn_get_output SG EFSSecurityGroup)\"'"
      ;;
    elb)
      export name='ELB'
      export body="${AWS_CFN_STACKS_PATH}/elb.yaml"
      P="     'ParameterKey=EnvType,ParameterValue=${ENVTYPE}'"
      P="${P} 'ParameterKey=SubnetIDs,ParameterValue=\"$(vgs_aws_cfn_get_output VPC SubnetIDs)\"'"
      P="${P} 'ParameterKey=SecurityGroupIDs,ParameterValue=\"$(vgs_aws_cfn_get_output SG ELBSecurityGroup)\"'"
      P="${P} 'ParameterKey=SSLCertificateId,ParameterValue=${AWS_SSL_ARN}'"
      ;;
    iam)
      export name='IAM'
      export body="${AWS_CFN_STACKS_PATH}/iam.yaml"
      A='--capabilities CAPABILITY_IAM'
      P="'ParameterKey=AssetsBucket,ParameterValue=${AWS_ASSETS_BUCKET}'"
      ;;
    rds)
      export name='RDS'
      export body="${AWS_CFN_STACKS_PATH}/rds.yaml"
      P="     'ParameterKey=EnvType,ParameterValue=${ENVTYPE}'"
      P="${P} 'ParameterKey=SubnetIDs,ParameterValue=\"$(vgs_aws_cfn_get_output VPC SubnetIDs)\"'"
      P="${P} 'ParameterKey=SecurityGroupIDs,ParameterValue=\"$(vgs_aws_cfn_get_output SG DBSecurityGroup)\"'"
      P="${P} 'ParameterKey=DBEngine,ParameterValue=${AWS_RDS_DB_ENGINE}'"
      P="${P} 'ParameterKey=DBName,ParameterValue=${AWS_RDS_DB_NAME}'"
      P="${P} 'ParameterKey=DBUser,ParameterValue=${AWS_RDS_DB_USER}'"
      P="${P} 'ParameterKey=DBPassword,ParameterValue=${AWS_RDS_DB_PASS}'"
      ;;
    rhea)
      export name='RHEA'
      export body="${AWS_CFN_STACKS_PATH}/rhea.yaml"
      P="     'ParameterKey=EnvType,ParameterValue=${ENVTYPE}'"
      P="${P} 'ParameterKey=Version,ParameterValue=${VERSION}-${GIT_SHA1}'"
      P="${P} 'ParameterKey=KeyName,ParameterValue=${AWS_EC2_KEY}'"
      P="${P} 'ParameterKey=ImageID,ParameterValue=\"$(vgs_aws_ec2_get_latest_ami_id VGH_RHEA)\"'"
      P="${P} 'ParameterKey=InstanceType,ParameterValue=t2.micro'"
      P="${P} 'ParameterKey=IamInstanceProfile,ParameterValue=\"$(vgs_aws_cfn_get_output IAM InstanceProfile)\"'"
      P="${P} 'ParameterKey=ElasticLoadBalancer,ParameterValue=\"$(vgs_aws_cfn_get_resource ELB ELB)\"'"
      P="${P} 'ParameterKey=EFSVolumeID,ParameterValue=\"$(vgs_aws_cfn_get_output EFS VolumeID)\"'"
      P="${P} 'ParameterKey=SubnetIDs,ParameterValue=\"$(vgs_aws_cfn_get_output VPC SubnetIDs)\"'"
      P="${P} 'ParameterKey=SecurityGroupIDs,ParameterValue=\"$(vgs_aws_cfn_get_output SG RheaSecurityGroup)\"'"
      P="${P} 'ParameterKey=ControlRepoArchive,ParameterValue=s3://${AWS_ASSETS_BUCKET}/${PP_ARTIFACT}'"
      ;;
    sg)
      export name='SG'
      export body="${AWS_CFN_STACKS_PATH}/sg.yaml"
      P="     'ParameterKey=VPCId,ParameterValue=\"$(vgs_aws_cfn_get_output VPC VPCId)\"'"
      P="${P} 'ParameterKey=SSHLocations,ParameterValue=\"${TRUSTED_IPS:-\"$(vgs_get_external_ip)/32\"}\"'"
      ;;
    vpc)
      export name='VPC'
      export body="${AWS_CFN_STACKS_PATH}/vpc.yaml"
      P="     'ParameterKey=NumberOfAZs,ParameterValue=${AWS_AZ_NUMBER}'"
      T="     'Key=Group,Value=${AWS_TAG_GROUP}'"
      T="${T} 'Key=Project,Value=${AWS_TAG_PROJECT}'"
      ;;
    *)
      cfn_usage
      ;;
  esac

  export cfn_cmd="--stack-name ${name} --template-body file://${body} ${A} --parameters ${P} --tags ${T}"
}
